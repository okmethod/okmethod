[tool.poetry]
name = "fastapi-app"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.4"
uvicorn = "^0.32.0"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.29.0"
ruff = "^0.7.2"
mypy = "^1.13.0"


#### Poe the Poet Defining tasks ####
# https://poethepoet.natn.io/tasks/index.html
pytest = "^8.3.3"
pytest-mock = "^3.14.0"
httpx = "^0.27.2"

[tool.poe.tasks.format]
help = "Run ruff format"
cmd = "ruff format ."

[tool.poe.tasks.format-fix]
help = "Run ruff format --fix"
cmd = "ruff format . --fix"

[tool.poe.tasks.ruff-lint]
help = "Run ruff lint"
cmd = "ruff check ."

[tool.poe.tasks.mypy-lint]
help = "Run mypy lint"
cmd = "mypy ."

[tool.poe.tasks.lint]
help = "Run lint all"
sequence = ["format", "ruff-lint", "mypy-lint"]

[tool.poe.tasks.test]
help = "Run pytest"
cmd = "pytest ."


#### Ruff Configuration ####
# https://docs.astral.sh/ruff/configuration

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "C",  # McCabe complexity
    "N",  # PEP8 Naming
    "Q",  # Flake8 Quotes
    "B",  # Bugbear
    "A",  # Flake8 Builtins
    # "D",  # Docstring Conventions
    "I",  # Import Order
    "T",  # Type Annotations
    "S",  # Security
    "RUF" # Ruff Specific
]

#### mypy Configuration ####
# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
# https://mypy.readthedocs.io/en/stable/command_line.html#the-mypy-command-line

[tool.mypy]
## Disallow dynamic typing
disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = true
disallow_subclassing_any = true
## Untyped definitions and calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
## Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
## Miscellaneous strictness flags
strict_equality = true
extra_checks = true
## Configuring error messages
show_error_context = true
show_column_numbers = true
show_error_end = true
show_error_code_links = true
pretty = true
color_output = true
error_summary = true


#### pytest Configuration ####
# https://docs.pytest.org/en/stable/reference/customize.html#pyproject-toml

[tool.pytest.ini_options]
testpaths = ["tests"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
